function [Interph2dB, Msg] = BERLinInterp(InterpPr, h2dBVals, PrVals)
%
% Функция вычисляет оценку значения отношения сигнал/шум в дБ (Interph2dB)
% для заданного значения вероятности (битовой/блоковой) ошибки (InterpPr)
% по кривой помехоустойчивости, заданной массивами PrVals и h2dBVals.
% Оценка производится путём линейной интерполяции в осях 10*lg(h2), lg(Pr).
%
% В данной версии даже, если кривая лежит выше или ниже заданной
% вероятности ошибки, всё равно будет выдан результат!
%
%
% Входные параметры:
%     InterpPr - интересующее значение вероятности ошибки;
%     h2dBVals - значения отношений сигнал/шум в дБ;
%     PrVals   - значения вероятностей ошибок.
%
% Выходные параметры:
%     Interph2dB - вычисленная оценка значения отношения сигнал/шум в дБ;
%     Msg        - cell-массив ошибок и предупреждений.

% Инициализация выходных переменных
    % Interph2dB = [];
    Msg = cell(0);

% Если кривая лежит НИЖЕ InterpPr
    if max(PrVals) < InterpPr
        Msg{end+1} = ['Кривая вероятности ошибок лежит НИЖЕ заданной ', ...
            'вероятности ошибки'];
        Interph2dB = h2dBVals(1);
        return
    end

% Если кривая лежит ВЫШЕ InterpPr
    if min(PrVals) > InterpPr
        Msg{end+1} = ['Кривая вероятности ошибок лежит ВЫШЕ заданной ', ...
            'вероятности ошибки'];
        Interph2dB = h2dBVals(end);
        return
    end
    
% Определим пары точек между которыми находится InterpPr
    Pairs = ((PrVals(1:end-1) >= InterpPr) & (PrVals(2:end) <= InterpPr));
    
    if sum(Pairs) > 1
        Msg{end+1} = ['Имеется несколько пар точек между которыми ', ...
            'находится заданная вероятность ошибки, выбрана пара с ', ...
            'наименьшим отношением сигнал/шум!'];
    end

% Интерполяция
    % Определим позицию левой и правой точки (если пар точек несколько, то
    % выбирается пара с наименьшим значением h2)
        PosL = find(Pairs, 1);
        PosR = PosL + 1;
        
    % Определим координаты точек причём сразу перейдём в логарифмический
    % масштаб по оси ординат (по оси абсцисс значения должны быть уже в дБ)
        x1 = h2dBVals(PosL);
        y1 = log10(PrVals(PosL));

        x2 = h2dBVals(PosR);
        y2 = log10(PrVals(PosR));

    % Проверка отсутствия наклона
        if x2 == x1
            Interph2dB = x1;
            return
        end
        
    % Определим параметры прямой, учитывая, что она должна быть прямой в
    % логарифмическом масштабе по оси ординат
        Lk = (y2 - y1) / (x2 - x1);
        Lb = (y1*x2 - y2*x1) / (x2 - x1);

    % Определим интересующее значение Refh2dB    
        Interph2dB = (log10(InterpPr) - Lb) / Lk;